name: "" # will fail if not given
displayName: "None"

namespaces: []

# Auto provising by tenants
enableTenantNamespaceAutoProvisioning: "false"
# tenantProvisionedNamespaces: []
tenantProvisionedRepository: ""
tenantProvisionedBranch: ""

# type of quota used
quotaType: "cluster"

# used in cluster-wide quota or namespace-quota
defaultOverallResourceQuota:
  # storage
  persistentvolumeclaims: "50"
  requests.storage: "1000Gi"
  pods: 100

  # disable load balancers and nodeports
  services.loadbalancers: 0
  services.nodeports: 0

  # Example of per storage class
  # <storage-class-name>.storageclass.storage.k8s.io/requests.storage

# overriden by tenants
clusterResourceQuota: {}

defaultClusterResourceQuota:
  requests.cpu: "2"
  requests.memory: 4Gi
  limits.cpu: "4"
  limits.memory: 4Gi

# per namespace default
namespaceResourceQuota:
  requests.cpu: "1"
  requests.memory: 1Gi
  limits.cpu: "2"
  limits.memory: 2Gi

containerLimits:

  # ephemeral-storage limits
  # 
  # emptyDir volumes, except tmpfs emptyDir volumes
  # directories holding node-level logs
  # writeable container layers
  #
  # see: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-emphemeralstorage-consumption

  # tmpfs emptydir = memory

  default:
    cpu: 300m
    memory: 200Mi
    ephemeral-storage: 1Gi
  defaultRequest:
    cpu: 50m
    memory: 100Mi
    ephemeral-storage: 100Mi
  max:
    cpu: "1"
    memory: 1Gi
    ephemeral-storage: 5Gi # same as pod limit
  min:
    cpu: 10m
    memory: 10Mi

  # limits can only be 10 times higher then requests
  maxLimitRequestRatio:
    cpu: 10
    memory: 4

# This needs to be in accordance with our worker nodes
# And obviously the container limits
# Worker node CPU: 4
# Worker node memory: 8Gi
podLimits:
  max:
    cpu: "4"
    memory: 3Gi
    ephemeral-storage: 5Gi # same as pod limit

  # no min is needed cause it's set on container
  # min:
  #   cpu: 10m
  #   memory: 10Mi

persistentVolumeClaimLimits:
  max:
    storage: 10Gi
  min:
    storage: 1Gi
