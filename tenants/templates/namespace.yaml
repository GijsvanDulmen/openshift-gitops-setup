{{- $namespaces := (include "tenants.namespaces" .) | fromYamlArray -}}
{{- range $ns := $namespaces }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: "{{ $ns.namespaceName }}"
  labels:
    gitops.ticq.dev/type: "tenant"
    gitops.ticq.dev/tenant: "{{ $.Values.name }}"

    # pod security - default openshift
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: v1.24
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: v1.24

    # but enforce as well!
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: v1.24
  annotations:
    openshift.io/display-name: "{{ $.Values.displayName }}"
    gitops.ticq.dev/type: "tenant"
    gitops.ticq.dev/tenant: "{{ $.Values.name }}"

  {{- if $ns.bindToNodes }}
    # openshift.io/node-selector: 'tenant={{ $ns.bindToNodes }}' 
    scheduler.alpha.kubernetes.io/node-selector: 'tenant={{ $ns.bindToNodes }}'
    scheduler.alpha.kubernetes.io/defaultTolerations: >-
      [{"operator": "Exists", "effect": "NoSchedule", "key": "{{ $ns.bindToNodes }}"}]

    # TODO: investigate if we can use this but why we need to add the really default tolerations (ready/memory-pressure etc)
    # scheduler.alpha.kubernetes.io/tolerationsWhitelist: '[{"operator": "Exists", "effect": "NoSchedule", "key": "{{ $ns.bindToNodes }}"}]'
  {{- else }}
    scheduler.alpha.kubernetes.io/tolerationsWhitelist: '[]'
  {{- end }}
{{- end }}

# labels:
# app.kubernetes.io/instance: team-backend-tenant
# kubernetes.io/metadata.name: team-backend-accept
# pod-security.kubernetes.io/audit: restricted
# pod-security.kubernetes.io/audit-version: v1.24
# pod-security.kubernetes.io/warn: restricted
# pod-security.kubernetes.io/warn-version: v1.24
# annotations:
# gitops.ticq.dev/type: tenant
# openshift.io/display-name: Super Team API backends
# openshift.io/sa.scc.mcs: 's0:c28,c7'
# openshift.io/sa.scc.supplemental-groups: 1000770000/10000
# openshift.io/sa.scc.uid-range: 1000770000/10000